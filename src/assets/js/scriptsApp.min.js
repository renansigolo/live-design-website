//Inicia o modulo do Dashboard em Angular
var app = angular.module('app', ['firebase', 'ui.router'])

//Declara os modulos dos controllers do Dashboard
app.controller('MainController', mainController)
app.controller('OrdersController', ordersController)
app.controller('PaymentsController', paymentsController)
app.controller('DocumentsController', documentsController)
app.controller('ContactsController', contactsController)

//Declara os modulos dos controllers do Login
app.controller('LoginController', loginController)
app.controller('LogoutController', logoutController)
app.controller('SignupController', signupController)
app.controller('PasswordController', passwordController)

//Declara as configuracoes das Rotas
app.config(routes)

//Configuracao das rotas
function routes($stateProvider, $urlRouterProvider) {
  $stateProvider.state('home', {
    templateUrl: 'templates/layout-home.html',
    abstract: true,
    url: '/home'
  })

  $stateProvider.state('home.login', {
    templateUrl: 'templates/login.html',
    controller: 'LoginController',
    url: ''
  })

  $stateProvider.state('home.signup', {
    templateUrl: 'templates/signup.html',
    controller: 'SignupController',
    url: '/signup'
  })

  $stateProvider.state('dashboard', {
    templateUrl: 'templates/layout-dashboard.html',
    abstract: true,
    url: '/dashboard'
  })

  $stateProvider.state('dashboard.orders', {
    templateUrl: 'templates/orders.html',
    controller: 'OrdersController',
    url: '/orders'
  })

  $stateProvider.state('dashboard.payments', {
    templateUrl: 'templates/payments.html',
    controller: 'PaymentsController',
    url: '/payments'
  })

  $stateProvider.state('dashboard.documents', {
    templateUrl: 'templates/documents.html',
    controller: 'DocumentsController',
    url: '/documents'
  })

  $stateProvider.state('dashboard.contacts', {
    templateUrl: 'templates/contacts.html',
    controller: 'ContactsController',
    url: '/contacts'
  })

  $stateProvider.state('dashboard.main', {
    templateUrl: 'templates/main.html',
    controller: 'MainController',
    url: '/main'
  })

  $urlRouterProvider.otherwise('/home')
}

function contactsController($scope, $state) {
  //Initialize collapse list
  $(document).ready(() => {
    $('.collapsible').collapsible()
  })
}

function documentsController($scope, $state, $firebaseObject, $firebaseAuth) {
  //Initialize collapse list
  $(document).ready(() => {
    $('.collapsible').collapsible()
  })

  $scope.authObj = $firebaseAuth()

  var authData = $scope.authObj.$getAuth()

  //First value of the database
  const rootRef = firebase
    .database()
    .ref()
    .child('users')
  //Second value of the database referencing to the first
  const ref = rootRef.child(authData.uid)
  const anotherref = ref.child('projectName')
  //Gets the last variable as the parameter into a variable to be accessed in firebase
  const syncObject = $firebaseObject(anotherref)
  //Create a variable in the 'dados' that syncs with firebase and with the $scope
  syncObject.$bindTo($scope, 'documentsData')
}

function mainController($scope, $state, $firebaseObject, $firebaseAuth) {
  $scope.authObj = $firebaseAuth()

  var authData = $scope.authObj.$getAuth()
  var userUID = authData.uid

  if (authData) {
    //console.log("Logged in as:", authData.uid);

    //First value of the database
    const rootRef = firebase
      .database()
      .ref()
      .child('users')
    //Second value of the database referencing to the first
    const ref = rootRef.child(authData.uid)
    //Gets the last variable as the parameter into a variable to be accessed in firebase
    const syncObject = $firebaseObject(ref)
    //Create a variable in the 'dados' that syncs with firebase and with the $scope
    syncObject.$bindTo($scope, 'data')
  } else {
    console.log('Logged out')
  }
}

function ordersController($scope, $state, $firebaseObject, $firebaseAuth) {
  //Initialize collapse list
  $(document).ready(() => {
    $('.collapsible').collapsible()
  })

  $scope.authObj = $firebaseAuth()

  var authData = $scope.authObj.$getAuth()

  //First value of the database
  const rootRef = firebase
    .database()
    .ref()
    .child('users')
  //Second value of the database referencing to the first
  const ref = rootRef.child(authData.uid)
  const anotherref = ref.child('projectName')
  //Gets the last variable as the parameter into a variable to be accessed in firebase
  const syncObject = $firebaseObject(anotherref)
  //Create a variable in the 'dados' that syncs with firebase and with the $scope
  syncObject.$bindTo($scope, 'ordersData')
}

function paymentsController($scope, $state, $firebaseObject, $firebaseAuth) {
  //Initialize collapse list
  $(document).ready(() => {
    $('.collapsible').collapsible()
  })

  $scope.authObj = $firebaseAuth()

  var authData = $scope.authObj.$getAuth()

  //First value of the database
  const rootRef = firebase
    .database()
    .ref()
    .child('users')
  //Second value of the database referencing to the first
  const ref = rootRef.child(authData.uid)
  const anotherref = ref.child('projectName')
  //Gets the last variable as the parameter into a variable to be accessed in firebase
  const syncObject = $firebaseObject(anotherref)
  //Create a variable in the 'dados' that syncs with firebase and with the $scope
  syncObject.$bindTo($scope, 'paymentsData')
}

function loginController($scope, $state, $window) {
  //Get Elements
  const txtEmail = document.getElementById('email')
  const txtPassword = document.getElementById('password')
  const btnLogin = document.getElementById('btnSignIn')

  //If click the button
  btnLogin.addEventListener('click', e => {
    const email = txtEmail.value
    const pass = txtPassword.value
    const auth = firebase.auth()

    //Sign In
    const promise = auth.signInWithEmailAndPassword(email, pass)

    //Catch error saved in promise const and display to the user
    promise.catch(e => M.toast({html: e.message}))
  })

  firebase.auth().onAuthStateChanged(firebaseUser => {
    if (firebaseUser) {
      successfulLogin()
    } else {
      console.info('Not logged in')
    }
  })

  const successfulLogin = () => {
    M.toast({html: 'Bem-vindo!'})
    $state.go('dashboard.main')
  }
}

function logoutController($scope, $state, $firebaseAuth, $window) {
  const auth = $firebaseAuth()
  $scope.logout = logout

  auth.$onAuthStateChanged(searchStatus)

  function searchStatus(firebaseUser) {
    if (!firebaseUser) {
      return
    }
    $scope.user = firebaseUser
  }

  // Essa função encerra a sessão do usuário no Firebase
  function logout() {
    auth.$signOut()
    $state.go('home.login')
    M.toast({html: 'Logout realizado com sucesso'})
  }
}

function passwordController() {
  //Handles the Password Reset button press.
  function sendPasswordReset() {
    const email = document.getElementById('verifyEmail').value
    firebase
      .auth()
      .sendPasswordResetEmail(email)
      .then(() => {
        // Password Reset Email Sent!
        Materialize.toast('Email de redefinição de senha enviado!', 4000)
      })
      .catch(error => {
        // Handle Errors here.
        const errorCode = error.code
        const errorMessage = error.message
        if (errorCode == 'auth/invalid-email') {
          alert(errorMessage)
        } else if (errorCode == 'auth/user-not-found') {
          alert(errorMessage)
        }
        console.error(error)
      })
  }
  document
    .getElementById('btnPasswordReset')
    .addEventListener('click', sendPasswordReset, false)
}

function signupController(
  $scope,
  $state,
  $firebaseAuth,
  $firebaseObject,
  $window
) {
  var auth = $firebaseAuth()
  var ref_usuario = firebase.database().ref('users')

  $scope.data = {}
  $scope.register = register
  $scope.menssageError = {}
  $scope.controlError = false

  function register() {
    auth
      .$createUserWithEmailAndPassword($scope.data.email, $scope.data.password)
      .then(register_data)
      .catch(logError)
  }

  function register_data(firebaseUser) {
    var user = $firebaseObject(ref_usuario.child(firebaseUser.uid))
    var date = new Date()
    user.name = $scope.data.name
    user.email = $scope.data.email
    user.date = date.toString()
    user.$save()

    Materialize.toast('Cadastro realizado com sucesso', 4000)
    $state.go('dashboard.main')
  }

  function logError(error) {
    $scope.controlError = true
    $scope.menssageError = Materialize.toast(error.message, 4000)
  }
}

//# sourceMappingURL=scriptsApp.min.js.map
